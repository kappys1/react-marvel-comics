{"version":3,"sources":["components/SearchBar/index.js","components/ItemSearchComic/index.js","pages/Search/useInfiniteScroll.js","pages/Search/index.js"],"names":["SearchBar","_ref","value","placeholder","className","onClickSearch","onChangeInput","_useState","useState","_useState2","Object","slicedToArray","name","setName","react_default","a","createElement","concat","onSubmit","e","preventDefault","autoFocus","type","onChange","target","defaultProps","ItemSearchComic","comic","onClick","src","thumbnail","alt","title","id","useInfiniteScroll","callback","isFetching","setIsFetching","_useState3","_useState4","ref","setRef","handleScroll","current","offsetHeight","scrollTop","scrollHeight","useEffect","addEventListener","removeEventListener","mapDispathToProps","filterResults","connect","state","comicsFilter","catalog","status","isShowing","hide","onClickItem","dispatch","useDispatch","page","setPage","filter","listRef","useRef","_useInfiniteScroll","hasMore","_useInfiniteScroll2","setListRef","isLoading","isSearching","isNewSearch","items","handleChangeInput","length","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","components_SearchBar","map","val","i","comicParams","thumbnail_small","components_ItemSearchComic","key","document","body"],"mappings":"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","file":"static/js/3.16a28940.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.scss';\n\nfunction SearchBar({ value, placeholder, className, onClickSearch, onChangeInput }) {\n  const [name, setName] = useState(value);\n\n  const handleSubmit = e => {\n    onClickSearch(name);\n    e.preventDefault();\n  };\n\n  const handleChangeInput = e => {\n    setName(e.target.value);\n    onChangeInput(e.target.value);\n    e.preventDefault();\n  };\n\n  return (\n    <div className={`SearchBar ${className}`}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            autoFocus\n            type=\"text\"\n            value={name}\n            onChange={handleChangeInput}\n            placeholder={placeholder}\n          />\n        </label>\n      </form>\n    </div>\n  );\n}\n\nSearchBar.defaultProps = {\n  value: '',\n  placeholder: '',\n  className: '',\n  onClickSearch: value => {},\n  onChangeInput: value => {}\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport './index.scss';\n\nfunction ItemSearchComic({ comic, onClick }) {\n  const handleClick = () => onClick(comic);\n  return (\n    <div className=\"ItemSearchComic\" onClick={handleClick}>\n      <img className=\"ItemSearchComic__image\" src={comic.thumbnail} alt=\"ItemComic\" />\n      <div className=\"ItemSearchComic__description\">\n        <h1 className=\"white\">{comic.title}</h1>\n        <div className=\"body white\"></div>\n      </div>\n    </div>\n  );\n}\n\nItemSearchComic.defaultProps = {\n  comic: {\n    title: '',\n    thumbnail: '',\n    id: -1\n  },\n  onClick: comic => {}\n};\n\nexport default ItemSearchComic;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = callback => {\n  const [isFetching, setIsFetching] = useState(false);\n  const [ref, setRef] = useState(false);\n\n  useEffect(() => {\n    if (ref) {\n      const current = ref.current;\n      current.addEventListener('scroll', handleScroll);\n      return () => current.removeEventListener('scroll', handleScroll);\n    }\n  }, [ref]);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n\n  function handleScroll() {\n    const threshold = 30; //px\n    if (ref.current.offsetHeight + ref.current.scrollTop <= ref.current.scrollHeight - threshold)\n      return;\n    if (!isFetching) {\n      setIsFetching(true);\n    }\n  }\n\n  return [isFetching, setIsFetching, setRef];\n};\n\nexport default useInfiniteScroll;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchBar from '../../components/SearchBar';\nimport './index.scss';\nimport { connect, useDispatch } from 'react-redux';\nimport { filterResults } from '../../modules/catalog/actions';\nimport ItemSearchComic from '../../components/ItemSearchComic';\nimport useInfiniteScroll from './useInfiniteScroll';\n\nconst Search = ({ isShowing, hide, onClickItem, comicsFilter, status }) => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [name, setName] = useState(comicsFilter.filter);\n  const listRef = useRef(null);\n  const [isFetching, setIsFetching, setListRef] = useInfiniteScroll(handleScroll);\n  const isLoading = status.isSearching && status.isNewSearch;\n\n  useEffect(() => {\n    if (listRef.current) {\n      setListRef(listRef);\n    }\n  }, [isShowing]);\n\n  useEffect(() => {\n    setIsFetching(false);\n  }, [comicsFilter.items]);\n\n  const handleChangeInput = name => {\n    if (name.length >= 3) {\n      setPage(1);\n      setName(name);\n      dispatch(filterResults(page, name));\n    }\n  };\n\n  function handleScroll() {\n    if (comicsFilter.hasMore) {\n      setPage(page + 1);\n      dispatch(filterResults(page + 1, name));\n    }\n  }\n\n  function handleClickItem(e) {\n    if (onClickItem) {\n      onClickItem(e);\n    }\n  }\n\n  const comicsSearchItems = () => {\n    if (comicsFilter.items.length) {\n      return comicsFilter.items.map((val, i) => {\n        const comicParams = { thumbnail: val.thumbnail_small, title: val.title, id: val.id };\n        return (\n          <ItemSearchComic\n            onClick={() => handleClickItem(val)}\n            key={i}\n            comic={comicParams}\n          ></ItemSearchComic>\n        );\n      });\n    } else {\n      return <div className=\"no-content\">No results</div>;\n    }\n  };\n\n  return isShowing\n    ? ReactDOM.createPortal(\n        <React.Fragment>\n          <div className=\"modal-overlay\" />\n          <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <button\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={hide}\n                >\n                  <i aria-hidden=\"true\" className=\"icon-close\"></i>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <SearchBar\n                  placeholder=\"Search... Starts with. ex: Spider\"\n                  value={name}\n                  onChangeInput={handleChangeInput}\n                  onClickSearch={handleChangeInput}\n                ></SearchBar>\n                <div className=\"container-search\" ref={listRef}>\n                  {!isLoading ? (\n                    comicsSearchItems()\n                  ) : (\n                    <div className=\"container-search content-loading\">\n                      <i className=\"icon-loading\"></i>\n                    </div>\n                  )}\n                  {isFetching ? (\n                    <div className=\"content-loading content-loading--small\">\n                      <i className=\"icon-loading\"></i>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>,\n        document.body\n      )\n    : null;\n};\n\nconst mapStateToProps = state => ({\n  comicsFilter: state.catalog.comicsFilter,\n  status: state.catalog.status\n});\n\nconst mapDispathToProps = {\n  filterResults\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(Search);\n"],"sourceRoot":""}