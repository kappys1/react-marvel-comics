{"version":3,"sources":["components/SearchBar/index.js","components/ItemSearchComic/index.js","pages/Search/useInfiniteScroll.js","pages/Search/index.js"],"names":["SearchBar","_ref","value","onClickSearch","className","onChangeInput","_useState","useState","_useState2","Object","slicedToArray","name","setName","react_default","a","createElement","onSubmit","e","preventDefault","autoFocus","type","onChange","target","placeholder","ItemSearchComic","_ref$comic","comic","onClick","src","thumbnail","alt","title","defaultProps","useInfiniteScroll","callback","isFetching","setIsFetching","_useState3","_useState4","ref","setRef","handleScroll","current","offsetHeight","scrollTop","scrollHeight","useEffect","addEventListener","removeEventListener","mapDispathToProps","filterResults","connect","state","comicsFilter","catalog","status","isShowing","hide","onClickItem","dispatch","useDispatch","page","setPage","filter","listRef","useRef","_useInfiniteScroll","hasMore","console","log","_useInfiniteScroll2","setListRef","isLoading","isSearching","isNewSearch","handleChangeInput","length","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","components_SearchBar","items","map","val","i","components_ItemSearchComic","key","document","body"],"mappings":"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","file":"static/js/3.16f28a5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.scss';\n\nfunction SearchBar({ value, className, onClickSearch, onChangeInput }) {\n  const [name, setName] = useState(value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (onClickSearch) {\n      onClickSearch(name);\n    }\n  };\n\n  const handleChangeInput = e => {\n    setName(e.target.value);\n    if (onChangeInput) {\n      onChangeInput(e.target.value);\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <div className={`SearchBar`}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            autoFocus\n            type=\"text\"\n            value={name}\n            onChange={handleChangeInput}\n            placeholder=\"Search ...\"\n          />\n        </label>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './index.scss';\n\nfunction ItemSearchComic({ comic = {}, onClick }) {\n  const handleClick = () => (onClick ? onClick(comic) : null);\n  return (\n    <div className=\"ItemSearchComic\" onClick={handleClick}>\n      <img className=\"ItemSearchComic__image\" src={comic.thumbnail} alt=\"ItemComic\" />\n      <div className=\"ItemSearchComic__description\">\n        <h1 className=\"white\">{comic.title}</h1>\n        <div className=\"body white\"></div>\n      </div>\n    </div>\n  );\n}\n\nItemSearchComic.defaultProps = {\n  comic: {}\n};\n\nexport default ItemSearchComic;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = callback => {\n  const [isFetching, setIsFetching] = useState(false);\n  const [ref, setRef] = useState(false);\n\n  useEffect(() => {\n    if (ref) {\n      const current = ref.current;\n      current.addEventListener('scroll', handleScroll);\n      return () => current.removeEventListener('scroll', handleScroll);\n    }\n  }, [ref]);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n\n  function handleScroll() {\n    if (ref.current.offsetHeight + ref.current.scrollTop !== ref.current.scrollHeight || isFetching)\n      return;\n    setIsFetching(true);\n  }\n\n  return [isFetching, setIsFetching, setRef];\n};\n\nexport default useInfiniteScroll;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchBar from '../../components/SearchBar';\nimport './index.scss';\nimport { connect, useDispatch } from 'react-redux';\nimport { filterResults } from '../../modules/catalog/actions';\nimport ItemSearchComic from '../../components/ItemSearchComic';\nimport useInfiniteScroll from './useInfiniteScroll';\n\nconst Search = ({ isShowing, hide, onClickItem, comicsFilter, status }) => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [name, setName] = useState(comicsFilter.filter);\n  const listRef = useRef(null);\n  const [isFetching, setIsFetching, setListRef] = useInfiniteScroll(handleScroll);\n  const isLoading = status.isSearching && status.isNewSearch;\n\n  useEffect(() => {\n    if (listRef.current) {\n      setListRef(listRef);\n    }\n  }, [isShowing, setListRef]);\n\n  useEffect(() => {\n    console.log('finish');\n    setIsFetching(false);\n  }, [setIsFetching]);\n\n  const handleChangeInput = name => {\n    if (name.length >= 3) {\n      setPage(1);\n      setName(name);\n      dispatch(filterResults(page, name));\n    }\n  };\n\n  function handleScroll() {\n    if (comicsFilter.hasMore) {\n      setPage(page + 1);\n      console.log(page);\n      dispatch(filterResults(page + 1, name));\n    }\n  }\n\n  function handleClickItem(e) {\n    if (onClickItem) {\n      onClickItem(e);\n    }\n  }\n\n  const comicsSearchItems = () => {\n    if (comicsFilter.items.length) {\n      return comicsFilter.items.map((val, i) => (\n        <ItemSearchComic onClick={() => handleClickItem(val)} key={i} comic={val}></ItemSearchComic>\n      ));\n    } else {\n      return <div className=\"no-content\">No results</div>;\n    }\n  };\n\n  return isShowing\n    ? ReactDOM.createPortal(\n        <React.Fragment>\n          <div className=\"modal-overlay\" />\n          <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <button\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={hide}\n                >\n                  <i aria-hidden=\"true\" className=\"icon-close\"></i>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <SearchBar\n                  value={name}\n                  onChangeInput={handleChangeInput}\n                  onClickSearch={handleChangeInput}\n                ></SearchBar>\n                <div className=\"container-search\" ref={listRef}>\n                  {!isLoading ? (\n                    comicsSearchItems()\n                  ) : (\n                    <div className=\"container-search content-loading\">\n                      <i className=\"icon-loading\"></i>\n                    </div>\n                  )}\n                  {isFetching ? (\n                    <div>\n                      <i className=\"icon-loading\"></i>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>,\n        document.body\n      )\n    : null;\n};\n\nconst mapStateToProps = state => ({\n  comicsFilter: state.catalog.comicsFilter,\n  status: state.catalog.status\n});\n\nconst mapDispathToProps = {\n  filterResults\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(Search);\n"],"sourceRoot":""}